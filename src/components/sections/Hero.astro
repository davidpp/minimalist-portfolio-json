---
import { basics } from "@cv"
import Section from "@/components/Section.astro"
import Mail from "@/icons/Mail.astro"
import X from "@/icons/X.astro"
import LinkedIn from "@/icons/LinkedIn.astro"
import GitHub from "@/icons/GitHub.astro"
import WorldMap from "@/icons/WorldMap.astro"
import type { SocialIcon } from "@/types"

const { name, label, image, location, profiles, email } = basics
const { city, region } = location

const SOCIAL_ICONS: SocialIcon = {
  GitHub,
  LinkedIn,
  X,
}

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn")
const linkedUrl = linkedInfo?.url

const printInfo = [email, linkedUrl].filter(Boolean).join(" â€¢ ")
---

<Section>
  <div class="container">
    <div class="info">
      <div class="reveal-container" style="--delay: 0s">
        <h1>{name}</h1>
        <div class="reveal-box"></div>
      </div>
      
      <div class="reveal-container" style="--delay: 0.15s">
        <h2>{label}</h2>
        <div class="reveal-box"></div>
      </div>
      
      <div class="reveal-container" style="--delay: 0.3s">
        <span>
          <WorldMap />
          {city}, {region}
        </span>
        <div class="reveal-box"></div>
      </div>

      <footer class="print">
        {printInfo}
      </footer>
      
      <div class="reveal-container" style="--delay: 0.45s">
        <footer class="no-print">
          {
            email && (
              <a
                href={`mailto:${email}`}
                title={`Send an email to ${name} at ${email}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Mail />
              </a>
            )
          }
          {
            profiles.map(({ network, url }) => {
              const Icon = SOCIAL_ICONS[network]

              return (
                <a
                  href={url}
                  title={`Visit ${name}'s profile on ${network}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon />
                </a>
              )
            })
          }
        </footer>
        <div class="reveal-box"></div>
      </div>
    </div>
    <div class="reveal-container" style="--delay: 0s">
      <figure>
        <img src={image} alt={name} />
      </figure>
      <div class="reveal-box"></div>
    </div>
  </div>
</Section>

<style>
  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: #444;
    font-weight: 500;
    font-size: 1.1rem;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 128px;
    border-radius: 16px;
  }

  span {
    color: #666;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
    letter-spacing: -0.05rem;
  }

  footer {
    color: #555;
    font-size: 0.65rem;
    display: flex;
    gap: 4px;
    margin-top: 8px;
  }

  footer a {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
  }

  footer a:hover {
    background: #eee;
    border: 1px solid #ddd;
  }

  /* Box Reveal Animation Styles */
  .reveal-container {
    position: relative;
    width: fit-content;
    overflow: hidden;
  }

  .reveal-container > *:not(.reveal-box) {
    opacity: 0;
    transform: translateY(20px);
    animation: slideUp 0.5s ease forwards;
    animation-delay: calc(var(--delay, 0s) + 0.2s);
  }

  .reveal-box {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(47, 79, 79, 0.8);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    transform: translateX(0);
    animation: slideLeft 0.5s ease forwards;
    animation-delay: var(--delay, 0s);
  }

  /* Special handling for the image container */
  .reveal-container:has(figure) {
    border-radius: 16px;
  }

  .reveal-container:has(figure) .reveal-box {
    border-radius: 16px;
  }

  @keyframes slideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideLeft {
    to {
      transform: translateX(100%);
    }
  }

  @media (width <= 700px) {
    .container {
      flex-direction: column-reverse;
    }

    .info {
      justify-content: center;
      align-items: center;
      padding-right: 0;
      text-align: center;
    }

    figure {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0;
    }

    h2 {
      text-wrap: balance;
    }
  }
</style>
